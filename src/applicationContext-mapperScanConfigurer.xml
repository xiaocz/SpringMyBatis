<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd     
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
		
	<!-- jdbc配置文件加载 -->
	<context:property-placeholder location="jdbc.properties"/>
	<!-- 连接池 -->		
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="2" />
		<property name="maxActive" value="5" />
		<property name="maxIdle" value="5" />
		<property name="minIdle" value="5" />
		<property name="maxWait" value="30000" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxOpenPreparedStatements" value="50" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="300" />
		<property name="logAbandoned" value="true" />
	</bean>
	
	<!-- 配置MyBatis相关的Bean，用Spring创建MyBatis的
		Bean对象，使用Spring以后就不需要使用Configration.xml了 -->
	<!-- 在Spring中凡是FactoryBean的类，都是工厂Bean，当class的值是
			XXXFactoryBean的时候，Spring容器创建的Bean对象是XXXFactoryBean生产
			的Bean对象类型，并不是XXXFactoryBean类型 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSource"/>
			<property name="mapperLocations" value="config/mapper/*.xml"/>
	</bean>
	
	<!-- 	============扫描方式成批的创建Mapper对象,默认是全部扫描 ============= 	-->
	<!-- 	com.tarena接口中的全部Mapper接口全部被扫描到，同时创建Mapper对象 			-->
	<!-- annotationsClass标志注解，只扫描包含com.bocom.annotation.MyBatisRepository注解的Mapper接口		-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.bocom.dao.mapper"/>
		<property name="annotationClass" value="com.bocom.annotation.MyBatisRepository"/>
	</bean>
	
</beans>








